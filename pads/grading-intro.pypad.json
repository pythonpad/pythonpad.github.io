{
    "id": "grading-intro",
    "title": "Zigzag with Robots",
    "src": "from cs1robots import *\n\n# Exercise: Zigzag!\n# Use the commented out code below to satisfy the grader. \n\ncreate_world()\nbot = Robot()\nbot.set_trace('blue')\nbot.turn_left()\n\n# def turn_right():\n#     for i in range(3):\n#         bot.turn_left()\n\n# def move_to_wall():\n#     while bot.front_is_clear():\n#         bot.move()\n\n# def touch_the_wall_and_come_back():\n#     move_to_wall()\n#     turn_right()\n#     bot.move()\n#     turn_right()\n#     move_to_wall()\n#     bot.turn_left()\n#     if bot.front_is_clear():\n#         bot.move()\n#         bot.turn_left()\n        \n# for i in range(5):\n#     touch_the_wall_and_come_back()\n",
    "files": {
        ".grader.py": {
            "type": "text",
            "body": "import sys\n\nzigzag_log = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [0, 9], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [1, 3], [1, 2], [1, 1], [1, 0], [2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9], [3, 9], [3, 8], [3, 7], [3, 6], [3, 5], [3, 4], [3, 3], [3, 2], [3, 1], [3, 0], [4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [5, 9], [5, 8], [5, 7], [5, 6], [5, 5], [5, 4], [5, 3], [5, 2], [5, 1], [5, 0], [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [7, 9], [7, 8], [7, 7], [7, 6], [7, 5], [7, 4], [7, 3], [7, 2], [7, 1], [7, 0], [8, 0], [8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8], [8, 9], [9, 9], [9, 8], [9, 7], [9, 6], [9, 5], [9, 4], [9, 3], [9, 2], [9, 1], [9, 0]]\n\nclass StdoutCollector:\n    def __init__(self):\n        self.data_list = []\n        \n    def __enter__(self):\n        self.stdoutbak = sys.stdout\n        sys.stdout = self\n        return self\n        \n    def __exit__(self, *args):\n        sys.stdout = self.stdoutbak\n        \n    def write(self, data=''):\n        self.data_list.append(str(data))\n\n    def flush(self):\n        pass\n        \n    def get_output(self):\n        return ''.join(self.data_list)\n        \ndef done():\n    f = open('.passed.json', 'w')\n    f.close()\n\ndef grade():\n    collector = StdoutCollector()\n    with collector:\n        import main\n    try:\n        main.bot\n    except:\n        print('❌ It seems like you do not have \"bot\" in your code!')\n        return\n    if main.bot.position_log != zigzag_log:\n        print('❌ It seems like your bot did not move exactly like in the example!')\n        return\n    print('✅ Well done!')\n    done()\n    \ngrade()"
        }
    }
}